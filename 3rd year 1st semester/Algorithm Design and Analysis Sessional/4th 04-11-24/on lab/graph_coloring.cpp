#include <bits/stdc++.h>
using namespace std;

vector <int> x;
vector<vector<int>> G;
int n;
int m=0;
int soln=0;
void NextValue(int k)
{
    while(true)
    {
        x[k] = (x[k]+1) % (m+1);
        if(x[k] == 0) return;
        int j;
        for(j=0; j<n; j++)
        {
            if( (G[k][j] != 0) && (x[k] == x[j]) )
                break;
        }
        if(j == n)
            return;
    }
}

void mColoring(int k)
{
    while(true)
    {
        NextValue(k);
        if(x[k] == 0) return;
        if(k==n-1)
        {
            /*
            for(int i=0; i<n; i++)
            {
                cout<<x[i]<<" ";
            }
            cout<<endl;
            */
            soln++;
        }
        else
            mColoring(k+1);
    }
}

int main()
{
    G= {{0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1}, {1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1}, {1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1}, {0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1}, {1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1}, {1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0}, {1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1}, {1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1}, {0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1}, {1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1}, {1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1}, {0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1}, {1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1}, {1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1}, {1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1}, {1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1}, {1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1}, {1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0}};
    n = G.size();
    x.resize(n);

    while(!soln)
    {
        auto start = chrono::high_resolution_clock::now();
        m++;
        mColoring(0);
        if(soln)
        {
            auto End = chrono::high_resolution_clock::now();
            chrono::duration<double, std::milli> duration = End - start;
            cout<<"Total Time taken: "<<duration.count()<<endl;
        }
    }
    cout<<"N= "<<n<<endl;
    cout<<"m= "<<m<<endl;
    cout<<"Total solution: "<<soln<<endl;


    return 0;
}

/*

for given picture
{0,1,0,0,1,1,1},
{1,0,1,1,0,0,0},
{0,1,0,1,0,0,1},
{0,1,1,0,1,0,0},
{0,1,0,0,1,1,1},
{0,1,0,0,1,1,1},
{0,1,0,0,1,1,1},

*/

